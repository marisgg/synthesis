pomdp

const int xMIN = 1;
const int xMAX = 3;
const int yMIN = 1;
const int yMAX = 4;

hole int ox_init in {2..2};
hole int oy_init in {1..4};

observable "placed" = placed;
observable "goal" = goal;
//observable "at" = at;
observable "near" = near;

formula goal = (x=xMAX & y=yMAX);
formula at = (x = ox & y = oy);
formula dx = max(x-ox,ox-x);
formula dy = max(y-oy,oy-y);
formula near = dx<=1 & dy<=1;

const double slip = 0.1;

module obstacle1
    placed: bool init false;
    ox : [xMIN..xMAX];
    oy : [yMIN..yMAX];

    [place] !placed -> (ox'=ox_init) & (oy'=oy_init) & (placed'=true);
    [up] placed -> true;
    [do] placed -> true;
    [le] placed -> true;
    [ri] placed -> true;
endmodule

module agent
    x : [xMIN..xMAX] init xMIN;
    y : [yMIN..yMAX] init yMIN;

    [up] true -> 1-slip : (y'=min(y+1,yMAX)) + slip : true;
    [do] true -> 1-slip : (y'=max(y-1,yMIN)) + slip : true;
    [le] true -> 1-slip : (x'=max(x-1,xMIN)) + slip : true;
    [ri] true -> 1-slip : (x'=min(x+1,xMAX)) + slip : true;
endmodule

formula step_penalty = 1;
formula crash_penalty = 100;
formula penalty = step_penalty + (at?crash_penalty:0);

rewards "penalty"
    [up] true : penalty;
    [do] true : penalty;
    [le] true : penalty;
    [ri] true : penalty;
endrewards
